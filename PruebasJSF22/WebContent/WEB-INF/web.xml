<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

  <display-name>PruebasJSF22</display-name>


  <!-- La página por defecto ("welcome file") -->
  <welcome-file-list>
    <welcome-file>buscadorUsuarios.xhtml</welcome-file>
  </welcome-file-list>


  <!-- El servlet de JSF -->
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  

  <!-- Aunque por defecto viene el patrón a /faces/* me parece
       mejor simplemente mapear los xhtml, y pasar de la carpeta faces -->
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.xhtml</url-pattern>
  </servlet-mapping>
  

  <!-- Supongo que esto es como en .net. Si el viewstate lo guarda el cliente
       hay más trasiego de datos por la red, pero gasta menos memoria -->
  <context-param>
    <description>State saving method: 'client' or 'server' (=default). See JSF Specification 2.5.2</description>
    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    <param-value>client</param-value>
  </context-param>
  

  
  <!-- Resulta que si activas el metodo de almacenamiento del viewstate a "cliente" dicho
       viewstate se encripta, y con este valor del entorno podemos controlar la clave que
       se utiliza para el encriptado. No veas lo que me costó descubrirlo 
       
       ver: http://stackoverflow.com/questions/22768258/strange-start-error-updating-to-mojarra-2-2-6
       
       -->
  <env-entry>
    <env-entry-name>jsf/ClientSideSecretKey</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value>am9kZXRlcHV0b2hhY2tlcg==</env-entry-value>
  </env-entry>  
  
  
  <!-- No sé qué es esto, hay que investigarlo -->
  <context-param>
    <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
    <param-value>resources.application</param-value>
  </context-param>
  

  <!-- Para activar la depuración en las vistas JSF, es un parámetro que luego
       se examina en la plantilla básica para activar o no la depuración -->
  <context-param>
    <param-name>javax.faces.FACELETS_DEVELOPMENT</param-name>
    <param-value>true</param-value>
  </context-param>
  

  <!-- No sé qué es esto, hay que investigarlo, pero parece que no hace mucha falta
  <listener>
    <listener-class>com.sun.faces.config.ConfigureListener</listener-class>
  </listener>
  -->
 
  <!-- Hace falta para la implementación de apache (myfaces) pero no para Mojarra -->
  <!-- 
  <listener>
    <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
  </listener> 
  -->

  <!-- La página de error también va a ser JSF, voy a enviar todos los
       errores a la página de error, así que configuro Throwable        -->
  <error-page>
     <exception-type>java.lang.Throwable</exception-type>
     <location>/error.xhtml</location>
  </error-page>


</web-app>